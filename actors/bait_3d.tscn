[gd_scene load_steps=7 format=3 uid="uid://dik0kc3cv5egj"]

[ext_resource type="Texture2D" uid="uid://dpil2mfcr2oym" path="res://assets/sprites/Bait-bait.png" id="2_y21r6"]

[sub_resource type="GDScript" id="GDScript_am1j8"]
script/source = "extends Node3D

signal bait_landed
signal bait_despawned

@export var reeling_speed := 0.8

# Throw arc state
var _throwing := false
var _throw_elapsed := 0.0
var _throw_duration := 0.6
var _throw_height := 1.5
var _throw_start: Vector3
var _throw_end: Vector3

# Reeling state
var reeling := false
var reeling_target: Vector3

func _ready():
	$ReelDetector.body_entered.connect(_on_reel_detector_body_entered)

func _on_reel_detector_body_entered(body: Node) -> void:
	if body.name == \"Killzone\":
		global_position = body.global_position + Vector3(0.3, 0.0, 0.0)  # offset if needed
		emit_signal(\"bait_despawned\")
		queue_free()


func throw_to(end_pos: Vector3, height := 1.5, duration := 0.6):
	_throw_start = global_position
	_throw_end = end_pos
	_throw_duration = duration
	_throw_height = height
	_throw_elapsed = 0.0
	_throwing = true

func reel_to(target: Vector3):
	reeling_target = target
	reeling = true

func stop_reeling():
	reeling = false

func _process(delta):
	if _throwing:
		_throw_elapsed += delta
		var t = clamp(_throw_elapsed / _throw_duration, 0.0, 1.0)

		var pos = Vector3()
		pos.x = lerp(_throw_start.x, _throw_end.x, t)
		pos.y = lerp(_throw_start.y, _throw_end.y, t) + sin(t * PI) * _throw_height
		pos.z = lerp(_throw_start.z, _throw_end.z, t)
		global_position = pos

		if t >= 1.0:
			_throwing = false
			emit_signal(\"bait_landed\")

	elif reeling:
		var direction = reeling_target - global_position
		var distance = direction.length()

		if distance > 0.01:
			var move = direction.normalized() * reeling_speed * delta
			global_position += move
					
		if reeling and (global_position - reeling_target).length() < 0.1:
			print(\"ðŸ’¥ Failsafe despawn\")
			emit_signal(\"bait_despawned\")
			queue_free()
			
func move_toward(target: Vector3, delta: float):
	var dir = target - global_position
	if dir.length() < 0.1:
		global_position = target
	else:
		global_position += dir.normalized() * reeling_speed * delta

func move_along_arc(target: Vector3, side: int, delta: float):
	var direction = target - global_position
	var mid = (global_position + target) * 0.5
	var perp = direction.normalized().cross(Vector3.UP).normalized()
	var control = mid + perp * side * 2.0

	var t := reeling_speed * delta
	var pos = (1.0 - t) * (1.0 - t) * global_position + 2.0 * (1.0 - t) * t * control + t * t * target
	global_position = pos
"

[sub_resource type="AtlasTexture" id="AtlasTexture_b07vr"]
atlas = ExtResource("2_y21r6")
region = Rect2(0, 0, 80, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_bae6e"]
atlas = ExtResource("2_y21r6")
region = Rect2(80, 0, 80, 96)

[sub_resource type="SpriteFrames" id="SpriteFrames_ni2xf"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_b07vr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bae6e")
}],
"loop": true,
"name": &"bait_idle",
"speed": 8.0
}]

[sub_resource type="SphereShape3D" id="SphereShape3D_xb8r5"]

[node name="Bait" type="Node3D"]
transform = Transform3D(0.6, 0, 0, 0, -2.62268e-08, -0.6, 0, 0.6, -2.62268e-08, 0, 0, 0)
script = SubResource("GDScript_am1j8")

[node name="AnimatedSprite3D" type="AnimatedSprite3D" parent="."]
transform = Transform3D(0.7, 0, 0, 0, -3.0598e-08, 0.7, 0, -0.7, -3.0598e-08, 0, 0, 0)
billboard = 1
texture_filter = 0
sprite_frames = SubResource("SpriteFrames_ni2xf")
animation = &"bait_idle"

[node name="ReelDetector" type="Area3D" parent="."]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 0, 0, 0)
collision_layer = 16
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="ReelDetector"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0)
shape = SubResource("SphereShape3D_xb8r5")
